user www-data;
worker_processes auto;  # Количество рабочих процессов
worker_rlimit_nofile 100000;
#pid /run/nginx.pid;
#include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 4000;  # Количество подключений на рабочий процесс
    # optimized to serve many clients with each thread, essential for linux -- for testing environment
    use epoll;
    multi_accept on;
}

http {
    ##
    # Основные настройки
    ##
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    # server_tokens off;

    # cache informations about FDs, frequently accessed files
    # can boost performance, but you need to test those values
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Заголовки безопасности
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # to boost I/O on HDD we can disable access logs
    access_log off;
    # Размеры буферов
    client_max_body_size 10M;  # Максимальный размер тела запроса
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    proxy_buffers 8 16K;
    proxy_buffer_size 32k;
    proxy_read_timeout 30;

#    include /local/nginx/mime.types;
#    default_type application/octet-stream;

    ##
    # Журналы доступа и ошибок
    ##
#    access_log /var/log/nginx/access.log;
#    error_log /var/log/nginx/error.log;

    ##
    # Gzip-сжатие
    ##
    gzip on;
    # Другие настройки gzip...
    gzip_min_length 10240;
    gzip_comp_level 1;
    gzip_vary on;
    gzip_disable msie6;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        # text/html is always compressed by HttpGzipModule
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;

    # request timed out -- default 60
    client_body_timeout 10;

    # if client stop responding, free up memory -- default 60
    send_timeout 2;

    # server will close connection after this time -- default 75
    keepalive_timeout 30;

    # number of requests client can make over keep-alive -- for testing environment
    keepalive_requests 100000;
    ##
    # Включение конфигураций виртуальных хостов
    ##
#    include /etc/nginx/conf.d/*.conf;
#    include /etc/nginx/sites-enabled/*;

   include      /etc/nginx/mime.types;

   upstream scicat_front {
        server localhost:8180;
        keepalive 30;
   }
   upstream scicat_back {
        least_conn;
        server localhost:33000;
        server localhost:33001;
        server localhost:33002;
        server localhost:33003;
        keepalive 30;
   }

   upstream rust_cluster {
        least_conn;
        server localhost:8080;
        server localhost:8081;
        server localhost:8082;
        server localhost:8083;
        server localhost:8084;
        server localhost:8085;
        server localhost:8086;
        server localhost:8087;
        keepalive 30;
    }

    # Конфигурация сервера для вашего Node.js приложения
    server {
        listen 80;
        server_name xenv.desy.de;  # Ваш домен

        location / {
            proxy_pass http://rust_cluster;  # Перенаправление на ваш Node.js сервер

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            tcp_nodelay on;
        }

        location /grafana/ {
            proxy_pass http://localhost:3000;  # Перенаправление на ваш Node.js сервер

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            tcp_nodelay on;
            rewrite ^/grafana/(.*) /$1 break;
        }

        location /kibana/ {
            proxy_pass http://localhost:5601;  # Перенаправление на ваш Node.js сервер

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            tcp_nodelay on;
            rewrite ^/kibana/(.*) /$1 break;
        }


        location /backend/ {
            proxy_pass http://scicat_back;  # Перенаправление на ваш Node.js сервер

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            tcp_nodelay on;
        }


       location /scicat/ {
            proxy_pass http://scicat_front/;  # Перенаправление на ваш Node.js сервер

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
            tcp_nodelay on;
        }


        location = /static {
            return 301 $scheme://$host/static/;  # Redirects /static to /static/ for consistency
        }

        location /static/ {
            alias /local/nginx/static/; # Maps /static to /local/nginx/static/
            index index.html index.htm;
            autoindex off; # Turn directory listing off

            # Check if the URI is exactly /static and rewrite to /static/
            if ($request_uri ~* "^/static$") {
                rewrite ^ /static/ permanent;
            }
        }
        # Другие настройки сервера...
    }

    # Дополнительные серверные блоки...
}
